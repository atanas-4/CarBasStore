// <auto-generated />
using System;
using CarBasStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarBasStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230323215722_Initials")]
    partial class Initials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarBasStore.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("CarBasStore.Models.Brand_CarProduct", b =>
                {
                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CarProductId")
                        .HasColumnType("int");

                    b.HasKey("BrandId", "CarProductId");

                    b.HasIndex("CarProductId");

                    b.ToTable("Brand_CarProducts");
                });

            modelBuilder.Entity("CarBasStore.Models.CarProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarProductCategory")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("CarProducts");
                });

            modelBuilder.Entity("CarBasStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("CarBasStore.Models.Brand_CarProduct", b =>
                {
                    b.HasOne("CarBasStore.Models.Brand", "Brand")
                        .WithMany("Brand_CarProducts")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBasStore.Models.CarProduct", "CarProduct")
                        .WithMany("Brand_CarProducts")
                        .HasForeignKey("CarProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("CarProduct");
                });

            modelBuilder.Entity("CarBasStore.Models.CarProduct", b =>
                {
                    b.HasOne("CarBasStore.Models.Category", "Category")
                        .WithMany("CarProducts")
                        .HasForeignKey("CinemaId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CarBasStore.Models.Brand", b =>
                {
                    b.Navigation("Brand_CarProducts");
                });

            modelBuilder.Entity("CarBasStore.Models.CarProduct", b =>
                {
                    b.Navigation("Brand_CarProducts");
                });

            modelBuilder.Entity("CarBasStore.Models.Category", b =>
                {
                    b.Navigation("CarProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
